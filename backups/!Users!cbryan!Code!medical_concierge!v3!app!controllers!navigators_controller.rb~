class UsersController < ApplicationController
  #before_filter :require_no_user, :only => [:new, :create]
  before_filter :require_user, :only => [:show, :edit, :update,:index,:destroy,:list]
  helper_method :sort_column, :sort_direction
  #autocomplete :user,:lastname
  
  
  def list
    @patient  = Patient.find(params[:patient_id])
    @users    = @patient.users.order(sort_column + " " + sort_direction).enabled
  end

  def results
     @users = User.all(:conditions => {:lastname => params[:patient][:last_name]}).order(sort_column + " " + sort_direction).paginate(:page => params[:page],:per_page => 20)
     respond_to do |format|
       format.html { render :template => 'users/index'}
       format.xml  { render :xml => @patients }
     end
  end
  
  def new
    @user = User.new
  end
  
  def index
    @users = User.enabled.order(sort_column + " " + sort_direction)
  end
  
  def create
    @user = User.new(params[:user])
    if @user.save
      @user.add_role! 'Navigator'
      flash[:notice] = "Account registered!"
      redirect_to patients_url
    else
      render :action => :new
    end
  end
  
  def show
    @user = @current_user
  end

  def edit
    if current_user.has_role?('Admin') and params[:id]
      @user = User.find(params[:id])
    else
      @user = @current_user
    end
  end
  
  def update
    @user = User.find(params[:id]) # makes our views "cleaner" and more consistent
    if @user.update_attributes(params[:user])
      if params[:role] and !params[:role].empty?
        @user.roles.each{|x|@user.remove_role(x)}
        @user.add_role!(params[:role])
      end
      flash[:notice] = "Account updated!"
      if current_user.has_role?('Admin')
        redirect_to users_path
      else
        redirect_to account_url
      end
    else
      render :action => :edit
    end
  end
  private
  def sort_direction  
    %w[asc desc].include?(params[:direction]) ?  params[:direction] : "asc"  
  end
  def sort_column  
    User.column_names.include?(params[:sort]) ? params[:sort] : "login"  
  end
end



# class UsersController < ApplicationController
#   # GET /users
#   # GET /users.xml
#   def index
#     @users = User.enabled
# 
#     respond_to do |format|
#       format.html # index.html.erb
#       format.xml  { render :xml => @users }
#     end
#   end
#  
#   def list
#     @users = User.enabled
#   end
# 
#   # GET /users/1
#   # GET /users/1.xml
#   def show
#     @user = User.find(params[:id])
# 
#     respond_to do |format|
#       format.html # show.html.erb
#       format.xml  { render :xml => @user }
#     end
#   end
# 
#   # GET /users/new
#   # GET /users/new.xml
#   def new
#     @user = User.new
# 
#     respond_to do |format|
#       format.html # new.html.erb
#       format.xml  { render :xml => @user }
#     end
#   end
# 
#   # GET /users/1/edit
#   def edit
#     @user = User.find(params[:id])
#   end
# 
#   # POST /users
#   # POST /users.xml
#   def create
#     @user = User.new(params[:user])
# 
#     respond_to do |format|
#       if @user.save
#         format.html { redirect_to(@user, :notice => 'User was successfully created.') }
#         format.xml  { render :xml => @user, :status => :created, :location => @user }
#       else
#         format.html { render :action => "new" }
#         format.xml  { render :xml => @user.errors, :status => :unprocessable_entity }
#       end
#     end
#   end
# 
#   # PUT /users/1
#   # PUT /users/1.xml
#   def update
#     @user = User.find(params[:id])
# 
#     respond_to do |format|
#       if @user.update_attributes(params[:user])
#         format.html { redirect_to(@user, :notice => 'User was successfully updated.') }
#         format.xml  { head :ok }
#       else
#         format.html { render :action => "edit" }
#         format.xml  { render :xml => @user.errors, :status => :unprocessable_entity }
#       end
#     end
#   end
# 
#   # DELETE /users/1
#   # DELETE /users/1.xml
#   def destroy
#     @user = User.find(params[:id])
#     @user.destroy
# 
#     respond_to do |format|
#       format.html { redirect_to(users_url) }
#       format.xml  { head :ok }
#     end
#   end
# end
